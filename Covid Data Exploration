SELECT *
FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3, 4
 


--selecting data that will be looking at

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1, 2



--total cases vs total deaths

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases) * 100 AS death_percentage
FROM CovidDeaths
WHERE location LIKE 'Thailand' AND continent IS NOT NULL
ORDER BY 1, 2



--total cases vs population

SELECT location, population,  MAX(total_cases) AS highest_infection_count, MAX((total_cases/population)) * 100 AS percent_population_infected
FROM CovidDeaths
--WHERE location LIKE 'Thailand' AND continent IS NOT NULL
GROUP BY location, population
ORDER BY percent_population_infected DESC																																																	




--country with highest infection rate campare to population

SELECT location, population,  date, MAX(total_cases) AS highest_infection_count, MAX((total_cases/population))*100 AS percent_population_infected
FROM CovidDeaths
--WHERE location LIKE 'Thailand' AND continent IS NOT NULL
GROUP BY location, population, date
ORDER BY percent_population_infected DESC



--countries with highest death count per population

SELECT location, MAX(CAST(total_deaths AS INT)) as total_deaths_count
FROM CovidDeaths
--WHERE location LIKE 'Thailand' AND continent IS NOT NULL
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY total_deaths_count DESC



--break thing down to contitnent

-- continent with highest death count

SELECT continent, SUM(CONVERT(int,new_deaths)) as total_deaths_count
FROM CovidDeaths
--WHERE location LIKE 'Thailand'
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_deaths_count DESC																																																																		




--global numers

SELECT SUM(new_cases) AS total_cases, SUM(CAST(new_deaths AS INT)) as total_deaths
, SUM (CAST(new_deaths AS INT)) / SUM(new_cases) *100 AS death_percentage
FROM CovidDeaths
--WHERE location LIKE 'Thailand' AND continent IS NOT NULL
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1, 2




--total vaccination vs population

SELECT dea.continent, dea.location,dea.date, dea.population, vac.new_vaccinations
,SUM(CAST(new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
--,(rolling_people_vac/population)*100
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
	ON dea.location = vac.location
	AND dea.date = vac.date
	WHERE dea.continent IS NOT NULL
ORDER BY 2,3



--use CTE

WITH population_vs_vac (continent, location, date, population, new_vaccinations, rolling_people_vac)
AS
(
SELECT dea.continent, dea.location,dea.date, dea.population, vac.new_vaccinations
,SUM(CAST(new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
--,(rolling_people_vac/population)*100
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
	ON dea.location = vac.location
	AND dea.date = vac.date
	WHERE dea.continent IS NOT NULL
--ORDER BY 2,3
)
select *, (rolling_people_vac/population)*100 AS percent_pop_vac
FROM population_vs_vac




--temp table

DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric,
rolling_people_vac numeric
)

INSERT INTO #PercentPopulationVaccinated

SELECT dea.continent, dea.location,dea.date, dea.population, vac.new_vaccinations
,SUM(CAST(new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
--,(rolling_people_vac/population)*100
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
	ON dea.location = vac.location
	AND dea.date = vac.date
	--WHERE dea.continent IS NOT NULL
--ORDER BY 2,3

select *, (rolling_people_vac/population)*100 AS percent_pop_vac
FROM #PercentPopulationVaccinated


--create view to store data for visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location,dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vac
--,(rolling_people_vac/population)*100
FROM CovidDeaths AS dea
JOIN CovidVaccinations AS vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3


select *
FROM PercentPopulationVaccinated
